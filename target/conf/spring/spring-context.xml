<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!--包扫描 -->
	<context:component-scan base-package="cn.com.greattimes.*"></context:component-scan>
	
	<!-- 加载外部属性配置文件 -->
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!--设置jdbc配置文件的位置  -->
<!-- 		<property name="order" value="1" /> -->
			<!--相对路径  -->
		<property name="locations" value="classpath*:jdbc.properties">
			<!--Windows下的绝对路径  -->
<!-- 		<property name="locations" value="file:E:/workForEclipse/User02/GetInfoBy/target/conf/jdbc.properties"> -->
			<!--linux 下的绝对路径  -->
<!-- 		<property name="locations" value="file:/home/snmpget/conf/jdbc.properties"> -->
			<!-- <list> -->
			<!-- <value>file:F:/conf/jdbc.properties</value> -->
			<!-- </list> -->
		</property>
	</bean>

	<!-- 配置C3P0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<!--设置mybaties配置文件的位置  -->
<!-- 		<property name="configLocation" value="file:/home/snmpget/conf/mybatis/config.xml"></property> -->
<!-- 		<property name="configLocation" value="classpath:mybatis/config.xml"></property> -->
		<property name="configLocation" value="classpath:mybatis/config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations">
			<list>
			<!--设置mybaties与接口对应的xml文件的位置  -->
				<value>classpath:mybatis/mapper-*.xml</value>
<!-- 				<value>classpath*:mybatis/mapper-*.xml</value> -->
<!-- 				<value>file:/home/snmpget/conf/mybatis/mapper-*.xml</value> -->
			</list>
		</property>
	</bean>

	<!-- 扫描Mapper映射配置 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.com.greattimes.mapper" />
	</bean>

	<!-- 事务管理器 -->
<!-- 	<bean id="transactionManager" -->
<!-- 		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> -->
<!-- 		<property name="dataSource" ref="dataSource" /> -->
<!-- 	</bean> -->

<!-- 	<tx:advice id="transactionAdvice" transaction-manager="transactionManager"> -->
<!-- 		<tx:attributes> -->
<!-- 			<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" -->
<!-- 				rollback-for="java.lang.Exception" /> -->
<!-- 			<tx:method name="query*" read-only="true" /> -->
<!-- 		</tx:attributes> -->
<!-- 	</tx:advice> -->

<!-- 	<aop:config> -->
<!-- 	<aop:advisor advice-ref="transactionAdvice" pointcut="execution(* cn.com.greattimes..*Service.*(..))"/> -->
<!-- 	</aop:config> -->


	<!-- 配置spring的监听器 -->
	<bean id="createInterfacesTableNameListener"
		class="cn.com.greattimes.service.listener.CreateInterfacesTableNameListener"></bean>
	<!-- 让getinitNum方法在spring加载的时候去执行 -->
	<bean id="getPortInfoHandlerImpl" class="cn.com.greattimes.handler.Impl.GetInitInfoHandlerImpl"
		scope="singleton" init-method="getinitNum" />

	<!-- <bean id="initInfoHandlerImpl" class="cn.com.greattimes.handler.Impl.InitInfoHandlerImpl" 
		scope="singleton" init-method="staticInitInfo" /> -->

	<!--配置bean为多实例 的 -->
	<bean id="interInfo" class="cn.com.greattimes.support.bean.InterInfo"
		scope="prototype"></bean>
	<bean id="tuxedoTQueueInfo" class="cn.com.greattimes.support.bean.TuxedoTQueueInfo"
		scope="prototype"></bean>
	<bean id="IndexObject" class="cn.com.greattimes.support.bean.IndexObject"
		scope="prototype"></bean>


	

	<!-- 配置石英任务 -->
	<bean id="jobDetailBean" class="org.springframework.scheduling.quartz.JobDetailBean">
		<!-- <property name="group" ref="createExcutionScheduler"> -->
		<property name="jobClass"
			value="cn.com.greattimes.service.quartz.CreateTableNameScheduler">
		</property>

		<!-- 以下面的方式注入需要的组件 -->
		<property name="jobDataMap">
			<map>
				<entry key="insertFlowDataService" value-ref="insertFlowDataServiceImpl"></entry>
			</map>
		</property>
	</bean>
	
	<!--将job2这个类注入到石英日志容器中  -->
	<bean id="job2" class="cn.com.greattimes.service.quartz.GainFlowDataSchduler" />
	
	<bean id="jobDetail_2"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean" >
		<property name="targetObject">
			<ref bean="job2" />
		</property>
		<!--执行注入类的目标方法  -->
		<property name="targetMethod" value="getDataRegular">
<!-- 			<value>say</value> -->
		</property>
	</bean>


	<!--配置克隆触发器 -->
	<!--每月15号自动建表  -->
	<bean id="cronTriggerBean_1" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<!-- QuartzJobBean -->
			<ref bean="jobDetailBean" />
		</property>
		<property name="cronExpression">
<!-- 			<value>0/3 * * * * ?</value> -->
			<value>0 0 0 15 * ?</value>
		</property>
	</bean>
	<!--每分钟执行一次  -->
	<bean id="cronTrigger_2" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="jobDetail_2" />
		</property>
		<property name="cronExpression">
		<!--每分钟运行一次  -->
			<value>0 0/1 * * * ?</value>
<!-- 			<value>0/10 * * * * ?</value> -->
		</property>
	</bean>
	<!--配置石英任务调度的工厂bean -->
	<bean id="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerBean_1" />
				<ref bean="cronTrigger_2" />
			</list>
		</property>
	</bean>

</beans>
